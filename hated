if not game:IsLoaded() then
    game.Loaded:Wait()
end


local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()



local Players, Client, Mouse, RS, Camera =
    game:GetService("Players"),
    game:GetService("Players").LocalPlayer,
    game:GetService("Players").LocalPlayer:GetMouse(),
    game:GetService("RunService"),
    game.Workspace.CurrentCamera

-----------------------------------------
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local GuiService = game:GetService("GuiService")
local RunService = game:GetService("RunService")
local Heartbeat = RunService.Heartbeat
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = Workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local Drawingnew = Drawing.new
local Color3fromRGB = Color3.fromRGB
local Vector2new = Vector2.new
local GetGuiInset = GuiService.GetGuiInset
local Randomnew = Random.new
local mathfloor = math.floor
local CharacterAdded = LocalPlayer.CharacterAdded
local CharacterAddedWait = CharacterAdded.Wait
local WorldToViewportPoint = CurrentCamera.WorldToViewportPoint
local RaycastParamsnew = RaycastParams.new
local EnumRaycastFilterTypeBlacklist = Enum.RaycastFilterType.Blacklist
local Raycast = Workspace.Raycast
local GetPlayers = Players.GetPlayers
local Instancenew = Instance.new
local IsDescendantOf = Instancenew("Part").IsDescendantOf
local FindFirstChildWhichIsA = Instancenew("Part").FindFirstChildWhichIsA
local FindFirstChild = Instancenew("Part").FindFirstChild
local tableremove = table.remove
local tableinsert = table.insert
-----------------------------------------

local Circle = Drawing.new("Circle")
Circle.Color = Color3.new(0,255,255)
Circle.Thickness = 1



game.Lighting.GlobalShadows = not hated.Main.DisableShadows
local UpdateFOV = function ()
    if (not Circle) then
        return Circle
    end
    Circle.Visible = hated.FOV["Visible"]
    Circle.Radius = hated.FOV["Radius"] * 3
    Circle.Position = Vector2.new(Mouse.X, Mouse.Y + (game:GetService("GuiService"):GetGuiInset().Y))
    Circle.Color = Circle.Color
    return Circle
end
RS.Heartbeat:Connect(UpdateFOV)

if hated.FOV.Color == "red" then
    Circle.Color = Color3.new(255, 0, 0)
elseif hated.FOV.Color == "blue" then
    Circle.Color = Color3.new(0, 0, 255)
elseif hated.FOV.Color == "green" then
    Circle.Color = Color3.new(0, 255, 0)
elseif hated.FOV.Color == "yellow" then
    Circle.Color = Color3.new(255, 255, 0)
elseif hated.FOV.Color == "purple" then
    Circle.Color = Color3.new(128, 0, 128)
elseif hated.FOV.Color == "orange" then
    Circle.Color = Color3.new(255, 165, 0)
elseif hated.FOV.Color == "pink" then
    Circle.Color = Color3.new(255, 192, 203)
elseif hated.FOV.Color == "brown" then
    Circle.Color = Color3.new(165, 42, 42)
elseif hated.FOV.Color == "black" then
    Circle.Color = Color3.new(0, 0, 0)
elseif hated.FOV.Color == "white" then
    Circle.Color = Color3.new(255, 255, 255)
elseif hated.FOV.Color == "gray" then
    Circle.Color = Color3.new(128, 128, 128)
elseif hated.FOV.Color == "light blue" then
    Circle.Color = Color3.new(173, 216, 230)
elseif hated.FOV.Color == "maroon" then
    Circle.Color = Color3.new(128, 0, 0)
elseif hated.FOV.Color == "teal" then
    Circle.Color = Color3.new(0, 128, 128)
elseif hated.FOV.Color == "lime" then
    Circle.Color = Color3.new(0, 255, 0)
elseif hated.FOV.Color == "magenta" then
    Circle.Color = Color3.new(255, 0, 255)
elseif hated.FOV.Color == "turquoise" then
    Circle.Color = Color3.new(64, 224, 208)
end




if hated.Main.AutoLowGFX then
    for _,v in pairs(workspace:GetDescendants()) do
    if v.ClassName == "Part"
    or v.ClassName == "SpawnLocation"
    or v.ClassName == "WedgePart"
    or v.ClassName == "Terrain"
    or v.ClassName == "MeshPart" then
    v.Material = "Plastic"
    end
    end
end

function IsPartVisible(Part, PartDescendant)
    -- // Vars
    local Character = LocalPlayer.Character or CharacterAddedWait(CharacterAdded)
    local Origin = CurrentCamera.CFrame.Position
    local _, OnScreen = WorldToViewportPoint(CurrentCamera, Part.Position)

    -- //
    if (OnScreen) then
        -- // Vars
        local raycastParams = RaycastParamsnew()
        raycastParams.FilterType = EnumRaycastFilterTypeBlacklist
        raycastParams.FilterDescendantsInstances = {Character, CurrentCamera}

        -- // Cast ray
        local Result = Raycast(Workspace, Origin, Part.Position - Origin, raycastParams)

        -- // Make sure we get a result
        if (Result) then
            -- // Vars
            local PartHit = Result.Instance
            local Visible = (not PartHit or IsDescendantOf(PartHit, PartDescendant))

            -- // Return
            return Visible
        end
    end

    -- // Return
    return false
end

ClosestPlrFromMouse = function()
    local Target, Closest = nil, 1/0
 
    for _ ,v in pairs(Players:GetPlayers()) do
        if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) then
            local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
            local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

            if (Circle.Radius > Distance and Distance < Closest and OnScreen) then
                Closest = Distance
                Target = v
            end
        end
    end
    
    if hated.Silent.Checks.DeathCheck and Target then
        local TargetHealth = Target.Character:FindFirstChild("Humanoid") and Target.Character.Humanoid.Health or 0
        if TargetHealth < 10 then
            return nil
        end
    end

    if hated.Silent.Checks.VisibleCheck then
        if Target and not IsPartVisible(Target.Character.HumanoidRootPart, Target.Character) then
            Target = nil
            return nil
        end
    end

    return Target
end


local WTS = function (Object)
    local ObjectVector = Camera:WorldToScreenPoint(Object.Position)
    return Vector2.new(ObjectVector.X, ObjectVector.Y)
end

local IsOnScreen = function (Object)
    local IsOnScreen = Camera:WorldToScreenPoint(Object.Position)
    return IsOnScreen
end

local FilterObjs = function (Object)
    if string.find(Object.Name, "Gun") then
        return
    end
    if table.find({"Part", "MeshPart", "BasePart"}, Object.ClassName) then
        return true
    end
end

local GetClosestBodyPart = function (character)
    local ClosestDistance = 1/0
    local BodyPart = nil
    if (character and character:GetChildren()) then
        for _,  x in next, character:GetChildren() do
            if FilterObjs(x) and IsOnScreen(x) then
                local Distance = (WTS(x) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                if (Circle.Radius > Distance and Distance < ClosestDistance) then
                    ClosestDistance = Distance
                    BodyPart = x
                end
            end
        end
    end
    return BodyPart
end



local Prey

task.spawn(function ()
    while task.wait() do
        if Prey then
            if hated.Silent.Enabled and hated.Silent.ClosestPart == true then
                hated.Silent["Part"] = tostring(GetClosestBodyPart(Prey.Character))
            end
        end
    end
end)

local grmt = getrawmetatable(game)
local backupindex = grmt.__index
setreadonly(grmt, false)

grmt.__index = newcclosure(function(self, v)
    if (hated.Silent.Enabled and Mouse and tostring(v) == "Hit") then

        Prey = ClosestPlrFromMouse()

        if Prey then
            local endpoint = game.Players[tostring(Prey)].Character[hated.Silent["Part"]].CFrame + (
                game.Players[tostring(Prey)].Character[hated.Silent["Part"]].Velocity * hated.Silent.Prediction
            )
            return (tostring(v) == "Hit" and endpoint)
        end
    end
    return backupindex(self, v)
end)

if hated.Resolver.AntiAimViewer == true then
    print('aav')
    for i, v in pairs(game.Players:GetPlayers()) do
    if v ~= Client and v.Character and v.Character:FindFirstChild("Head") and  v.Character:FindFirstChild("HumanoidRootPart")  then
        local c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
        local d = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(c.X, c.Y)).Magnitude
    end
end
end

spawn(function()
    while true do
        wait()
        if hated.AutoPred.Enabled then
            local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
            local pingValue = string.split(ping, " ")[1]
            local pingNumber = tonumber(pingValue)
            if hated.AutoPred.Silent.Enabled == true then
                if pingNumber > 310 then
                    getgenv().hated.Silent.Prediction = 0.16780
                elseif pingNumber > 260 then
                    getgenv().hated.Silent.Prediction = 0.1651
                elseif pingNumber > 210 then
                    getgenv().hated.Silent.Prediction = 0.16942
                elseif pingNumber > 200 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P200
                elseif pingNumber > 190 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P190
                elseif pingNumber > 180 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P180
                elseif pingNumber > 170 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P170
                elseif pingNumber > 160 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P160
                elseif pingNumber > 150 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P150
                elseif pingNumber > 140 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P140
                elseif pingNumber > 130 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P130
                elseif pingNumber > 120 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P120
                elseif pingNumber > 110 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P110
                elseif pingNumber > 100 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P100
                elseif pingNumber > 90 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P90
                elseif pingNumber > 80 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P80
                elseif pingNumber > 70 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P70
                elseif pingNumber > 60 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P60
                elseif pingNumber > 50 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P50
                elseif pingNumber > 40 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P40
                elseif pingNumber > 30 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P30
                elseif pingNumber > 20 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P20
                elseif pingNumber > 10 then
                    getgenv().hated.Silent.Prediction = hated.AutoPred.Silent.P10
                end
            end
        end
    end
end)


-- Define the function to find the target distance
local function find_target_mag()
    if hated.Range.Enabled then
    Prey = ClosestPlrFromMouse()
    local preyPlayer = game.Players:FindFirstChild(tostring(Prey))
    local partName = hated.Silent["Part"]
    local prediction = hated.Silent.Prediction
    if Prey then
        local TargetHealth = Target.Character:FindFirstChild("Humanoid") and Target.Character.Humanoid.Health or 0
        if TargetHealth < 2 then
            return
        end
    end
    if preyPlayer and preyPlayer.Character and preyPlayer.Character:FindFirstChild(partName) then
        local preyPart = preyPlayer.Character[partName]

        if preyPart and preyPart:IsA("BasePart") then
            local preyPosition = preyPart.CFrame.Position + (preyPart.Velocity * prediction)
            local clientPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            local distance = (preyPosition - clientPosition).Magnitude

            -- 'distance' now contains the distance in studs between the client and the calculated point.
        end
    end
    return distance
    end
end

-- Connect the function to the Heartbeat event to run it every frame
local RunService = game:GetService("RunService")

local function manage_range()
    Prey = ClosestPlrFromMouse()
    local preyPlayer = game.Players:FindFirstChild(tostring(Prey))
    local partName = hated.Silent["Part"]
    local prediction = hated.Silent.Prediction

    if preyPlayer and preyPlayer.Character and preyPlayer.Character:FindFirstChild(partName) then
        local preyPart = preyPlayer.Character[partName]

        if preyPart and preyPart:IsA("BasePart") then
            local preyPosition = preyPart.CFrame.Position + (preyPart.Velocity * prediction)
            local clientPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            local distance = (preyPosition - clientPosition).Magnitude
            if distance < hated.Range.CloseDistance then
                if hated.Range.FOV.Enabled then
                    getgenv().hated.FOV.Radius = hated.Range.FOV.Close
                end
                if hated.Range.Prediction.Enabled then
                    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                    local pingValue = string.split(ping, " ")[1]
                    local pingNumber = tonumber(pingValue)
                    if pingNumber > 140 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P140_200
                    elseif pingNumber > 120 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P120_140
                    elseif pingNumber > 90 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P90_120
                    elseif pingNumber > 80 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P80_90
                    elseif pingNumber > 70 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P70_80
                    elseif pingNumber > 60 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P60_70
                    elseif pingNumber > 50 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P50_60
                    elseif pingNumber > 40 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P40_50
                    elseif pingNumber > 30 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P30_40
                    elseif pingNumber > 20 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P20_30
                    elseif pingNumber > 10 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Close.P10
                    end
                end
            elseif distance < hated.Range.MidDistance then
                if hated.Range.FOV.Enabled then
                    getgenv().hated.FOV.Radius = hated.Range.FOV.Mid
                end
                if hated.Range.Prediction.Enabled then
                    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                    local pingValue = string.split(ping, " ")[1]
                    local pingNumber = tonumber(pingValue)
                    if pingNumber > 140 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P140_200
                    elseif pingNumber > 120 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P120_140
                    elseif pingNumber > 90 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P90_120
                    elseif pingNumber > 80 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P80_90
                    elseif pingNumber > 70 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P70_80
                    elseif pingNumber > 60 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P60_70
                    elseif pingNumber > 50 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P50_60
                    elseif pingNumber > 40 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P40_50
                    elseif pingNumber > 30 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P30_40
                    elseif pingNumber > 20 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P20_30
                    elseif pingNumber > 10 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Mid.P10
                    end
                end
            elseif distance < hated.Range.FarDistance then
                if hated.Range.FOV.Enabled then
                    getgenv().hated.FOV.Radius = hated.Range.FOV.Far
                end
                if hated.Range.Prediction.Enabled then
                    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                    local pingValue = string.split(ping, " ")[1]
                    local pingNumber = tonumber(pingValue)
                    if pingNumber > 140 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P140_200
                    elseif pingNumber > 120 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P120_140
                    if pingNumber > 90 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P90_120
                    elseif pingNumber > 80 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P80_90
                    elseif pingNumber > 70 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P70_80
                    elseif pingNumber > 60 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P60_70
                    elseif pingNumber > 50 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P50_60
                    elseif pingNumber > 40 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P40_50
                    elseif pingNumber > 30 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P30_40
                    elseif pingNumber > 20 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P20_30
                    elseif pingNumber > 10 then
                        getgenv().hated.Silent.Prediction = hated.Range.Prediction.Far.P10_20
                    end
                end
            else
                getgenv().hated.Silent.Prediction = getgenv().hated.Range.Prediction.Far
            end
        end
    end
end
end
RunService.Heartbeat:Connect(manage_range)
